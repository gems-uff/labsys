"""empty message

Revision ID: cb705786d02d
Revises: 8b54b43eb958
Create Date: 2017-11-05 19:25:43.940781

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cb705786d02d'
down_revision = '8b54b43eb958'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('specifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(length=128), nullable=False),
    sa.Column('catalog_number', sa.String(length=128), nullable=False),
    sa.Column('stock_unit', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('manufacturer', 'catalog_number', name='manufacturer_catalog')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('invoice', sa.String(length=128), nullable=True),
    sa.Column('invoice_type', sa.String(length=128), nullable=True),
    sa.Column('financier', sa.String(length=128), nullable=True),
    sa.Column('notes', sa.String(length=256), nullable=True),
    sa.Column('order_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['specifications.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('products', sa.Column('created_on', sa.DateTime(), nullable=True))
    op.add_column('products', sa.Column('updated_on', sa.DateTime(), nullable=True))
    op.alter_column('products', 'min_stock', new_column_name='stock_minimum', existing_type=sa.Integer(), nullable=False)
    # op.add_column('products', sa.Column('stock_minimum', sa.Integer(), nullable=False))
    # op.alter_column('products', 'min_stock', existing_type=sa.INTEGER(), nullable=False)
    op.drop_constraint('catalog_product', 'products', type_='unique')
    op.drop_constraint('products_parent_id_fkey', 'products', type_='foreignkey')
    op.drop_column('products', 'parent_id')
    op.drop_column('products', 'manufacturer')
    op.drop_column('products', 'stock_unit')
    op.drop_column('products', 'catalog')
    op.add_column('stock_products', sa.Column('created_on', sa.DateTime(), nullable=True))
    op.add_column('stock_products', sa.Column('updated_on', sa.DateTime(), nullable=True))
    op.alter_column('stock_products', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_unique_constraint('product_lot', 'stock_products', ['product_id', 'lot_number'])
    op.drop_constraint('stock_product', 'stock_products', type_='unique')
    op.add_column('transactions', sa.Column('created_on', sa.DateTime(), nullable=True))
    op.add_column('transactions', sa.Column('updated_on', sa.DateTime(), nullable=True))
    op.alter_column('transactions', 'amount',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('transactions', 'transaction_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('transactions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('transactions_stock_product_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_product_id_fkey', 'transactions', type_='foreignkey')
    op.drop_column('transactions', 'product_id')
    op.drop_column('transactions', 'invoice')
    op.drop_column('transactions', 'stock_product_id')
    op.drop_column('transactions', 'financier')
    op.drop_column('transactions', 'invoice_type')
    op.drop_column('transactions', 'details')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transactions', sa.Column('details', sa.VARCHAR(length=256), autoincrement=False, nullable=True))
    op.add_column('transactions', sa.Column('invoice_type', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
    op.add_column('transactions', sa.Column('financier', sa.VARCHAR(length=128), autoincrement=False, nullable=True))
    op.add_column('transactions', sa.Column('stock_product_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('transactions', sa.Column('invoice', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
    op.add_column('transactions', sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('transactions_product_id_fkey', 'transactions', 'products', ['product_id'], ['id'])
    op.create_foreign_key('transactions_stock_product_id_fkey', 'transactions', 'stock_products', ['stock_product_id'], ['id'])
    op.alter_column('transactions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('transactions', 'transaction_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('transactions', 'amount',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('transactions', 'updated_on')
    op.drop_column('transactions', 'created_on')
    op.create_unique_constraint('stock_product', 'stock_products', ['product_id', 'lot_number'])
    op.drop_constraint('product_lot', 'stock_products', type_='unique')
    op.alter_column('stock_products', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('stock_products', 'updated_on')
    op.drop_column('stock_products', 'created_on')
    op.add_column('products', sa.Column('catalog', sa.VARCHAR(length=128), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('stock_unit', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('manufacturer', sa.VARCHAR(length=128), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('products_parent_id_fkey', 'products', 'products', ['parent_id'], ['id'])
    op.create_unique_constraint('catalog_product', 'products', ['manufacturer', 'catalog'])
    op.alter_column('products', 'stock_minimum', new_column_name='min_stock', existing_type=sa.Integer(), nullable=True)
    #op.alter_column('products', 'min_stock', existing_type=sa.INTEGER(), nullable=True)
    # op.drop_column('products', 'stock_minimum')
    op.drop_column('products', 'updated_on')
    op.drop_column('products', 'created_on')
    op.drop_table('order_items')
    op.drop_table('orders')
    op.drop_table('specifications')
    # ### end Alembic commands ###
